Needs["NETLink`"]
LoadNETAssembly["Tinkerforge",NotebookDirectory[]<>"../../.."]

host="localhost"
port=4223
uid="XYZ"(*Change XYZ to the UID of your Industrial Dual Analog In Bricklet*)

(*Create IPConnection and device object*)
ipcon=NETNew["Tinkerforge.IPConnection"]
idai=NETNew["Tinkerforge.BrickletIndustrialDualAnalogIn",uid,ipcon]
ipcon@Connect[host,port]

(*Get threshold callbacks with a debounce time of 10 seconds (10000ms)*)
idai@SetDebouncePeriod[10000]

(*Callback function for voltage reached callback (parameter has unit mV)*)
VoltageReachedCB[sender_,channel_,voltage_]:=
 Module[{},
  Print["Channel: "<>ToString[channel]];
  Print["Voltage: "<>ToString[N[Quantity[voltage,"V/1000"]]]]
 ]

AddEventHandler[idai@VoltageReachedCallback,VoltageReachedCB]

(*Configure threshold for voltage (channel 1) "greater than 10 V" (unit is mV)*)
option=Tinkerforge`BrickletIndustrialDualAnalogIn`THRESHOLDUOPTIONUGREATER
idai@SetVoltageCallbackThreshold[1,option,10*1000,0]

Input["Click OK to exit"]

(*Clean up*)
ipcon@Disconnect[]
ReleaseNETObject[idai]
ReleaseNETObject[ipcon]
